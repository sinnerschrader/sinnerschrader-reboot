// reset form groups.
// TODO: we might consider to reset them globally
fieldset {
	font-family: inherit;
	border: 0;
	margin: 0;
	padding: 0;
}

// local variables
$filter-bar-height--mobile: 7.2rem;
$filter-bar-height--desktop: 11.8rem;

@mixin active-filters {
	@include code-100;

	font-size: 1rem;
	color: $color-primary--600;
	text-transform: uppercase;
	letter-spacing: 0.15rem;
}

@mixin icon-button {
	border: 0;
	justify-content: center;
	align-items: center;
	width: 4rem;
	height: 4rem;
	border-radius: 50%;
	background-color: $color-primary--900;
	color: $color-primary--white;
}

.toggle-button {
	display: inline-flex;

	&:hover {
		@include default-animation(transform);

		transform: scale(calc(1.2 / 1.4));
	}
}

.jobs__intro {
	@include spacing-900(margin-top);
	@include spacing-900(margin-bottom);

	h1 {
		color: $color-primary--black;

		.is-dark & {
			color: $color-primary--white;
		}
	}
}
// needed to make position: sticky; work
.jobs-page {
	overflow-x: initial;

	// Filter Button that floats with scrolling
	@include bp-xs {
		.mobile-floater {
			display: block;
			position: sticky;
			top: 90vh;
			text-align: right;
			max-width: 100%;
			overflow: hidden;
			z-index: 100;

			.toggle-button {
				@include icon-button();

				position: relative;
				cursor: pointer;
				transform: translateX(4rem);
				transition: transform 0.4s ease-in;
			}

			.freeze-scroll & {
				display: none;
			}

			.is-floating ~ & {
				.toggle-button {
					transform: translateX(-4rem);
				}
			}

			svg {
				position: absolute;
				width: 100%;
				height: 100%;
				left: 4px;
				top: 5px;
				filter: invert(1);
			}
		}

		.js-toggle-filter-bar--mobile {
			position: relative;

			svg {
				position: absolute;
				width: 16px;
				height: 16px;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);
			}
		}
	}

	&--perks {
		@include spacing-700(margin-top);
		@include spacing-700(margin-bottom);
	}

	&--offering,
	&--teaser {
		overflow-x: hidden;
	}

	.offering--info {
		@include spacing-900(padding-bottom);

		padding-top: 0;
	}

	.filter-list {
		position: relative;
	}

	.job-filter-bar {
		@include paragraph-100();

		overflow-x: hidden;
		z-index: 1;
		width: 100%;

		// sticky scroll behaviour
		position: sticky;
		top: 0;
		background-color: $color-primary--black;
		color: $color-primary--white;
		box-sizing: border-box;

		// this is the height of the closed menu
		max-height: $filter-bar-height--mobile;
		overflow: hidden;

		@include bp-s {
			position: initial;
		}

		@include bp-xs {
			position: initial;

			&__toggle {
				display: none;
			}
		}

		@include bp-s-and-above {
			max-height: $filter-bar-height--desktop;
			padding-top: $spacing--400--desktop;
			z-index: 13;
		}

		// This is toggle without animation for now.
		// because animating height changes is not a good idea performance wise
		// TODO: find an elegant solution for animation
		&.is-open {
			max-height: initial;
		}

		// this is only for the mobile view
		&__mobile-header {
			@include interactive-100;

			text-transform: uppercase;
			margin: 0;
			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: 0 $spacing--400;
			height: $filter-bar-height--mobile;

			@include bp-s-and-above {
				display: none;
			}

			// reset p-tag styles
			.job-filter-bar__mobile-legend {
				@include interactive-100;
			}

			.mobile-active-filters {
				@include active-filters();
			}
		}

		// fieldset -> filter group
		&__category {
			padding-right: 1em;
		}

		// fieldset legend
		&__category-legend {
			font-size: 2.4rem;
			margin-bottom: 4.6rem;

			@include bp-xs {
				padding-top: 3.2rem;
			}

			// those are the labels showing which filters apply for each category
			.active-filters {
				@include active-filters();
			}
		}
		// filter chip
		&__filter-item {
			line-height: initial;
			background-color: $color-primary--900;
			color: $color-primary--white;

			svg {
				filter: invert(1);
			}

			&.is-active {
				background-color: $color-primary--white;
				color: $color-primary--900;

				svg {
					filter: invert(0);
				}

				&:hover {
					svg {
						filter: invert(1);
					}

					circle {
						transition: transform 0.3s ease-in-out;
						transform: scale(1);
					}
				}

				.filter-checkbox__icon__animated-path {
					@include default-animation(transform);

					transform-origin: center;
					transform: rotate(90deg);
				}
			}

			.is-dark & {
				svg {
					filter: invert(0);
				}

				&.is-active {
					svg {
						filter: invert(1);
					}

					&:hover {
						svg {
							filter: invert(0);
						}
					}
				}

				.button--clear {
					color: $color-primary--white;
				}

				.button--secondary {
					background-color: $color-primary--white;
					color: $color-primary--black;
				}
			}
		}

		// Button for open close the filter section
		&__toggle {
			text-align: right;

			@include bp-xs() {
				display: flex;
			}

			// TODO: replace when icon button is implemented
			.toggle-button {
				@include icon-button();
			}
		}

		// Buttons for dismiss / apply filters
		&__confirm-group {
			display: flex;
			justify-content: space-between;

			@include bp-s-and-above {
				text-align: right;

				.button:last-of-type {
					margin-right: 0;
				}
			}

			.button {
				flex: 1;
				justify-content: center;
				height: fit-content;
			}
		}
	}

	.job-list {
		padding-top: $spacing--600;
		margin-top: 0;

		// A category holds subheadline for discipline
		// and a list for the offerings
		&__category {
			border-bottom: 1px solid $color-primary--900;

			.is-dark & {
				border-color: $color-primary--white;
			}

			&-title {
				@include spacing-400(padding-top);
				@include spacing-400(padding-bottom);
			}

			&-headline {
				@include headline-200();
				@include spacing-400(padding-top);

				border-bottom: 1px solid $color-primary--600;
				position: sticky;
				top: 0;
				margin: 0;
				z-index: 0;
				padding-right: 23rem;

				@include bp-s-and-above {
					top: $filter-bar-height--desktop + $spacing--400;
					border: 0;
				}

				@include bp-xs {
					@include spacing-600(padding-top);
					@include spacing-400(padding-bottom);

					background: $color-primary--white;
					z-index: 12;

					.is-dark & {
						background: transparent;
					}

					&:first-child {
						padding-top: 0;
					}
				}
			}
		}

		// LI
		&__item {
			@include spacing-400(padding-top);
			@include spacing-400(padding-bottom);

			border-bottom: 1px solid $color-primary--600;

			// is-last gets added via JS
			&.is-last,
			&:last-of-type {
				border-bottom: 0;
			}

			// Job Title
			&-title {
				@include headline-400();

				.is-dark & {
					color: $color-primary--white;
				}
			}

			// Jobs Location
			&-location {
				@include paragraph-200();

				padding-top: 0.8rem;

				.is-dark & {
					color: $color-primary--white;
				}
			}
		}

		// Styling for the link
		&__anchor {
			display: block;
			color: $color-primary--black;
			transition: transform 0.2s linear;

			&:hover {
				// TODO: actually this is guessed
				transform: translateX($spacing--100);
			}

			// reset a tag styling
			&:hover,
			&:focus,
			&:active,
			&:visited {
				color: $color-primary--black;
			}
		}

		// hides list items and discipline categories
		.hidden {
			display: none;
		}
	}

	.job-filter-wrapper {
		@include bp-xs {
			transform: translateX(100%);
			transition: transform 0.2s linear;
			height: var(--mobile-height);
			overflow: scroll;
			z-index: 14;
			top: 0;
			background: $color-primary--black;
			position: fixed;
			margin: 0;
			padding: 0 2.4rem;

			.job-filter-bar__category {
				padding-bottom: 3.2rem;

				&:first-of-type {
					border-bottom: 1px solid $color-primary--600;
				}
			}

			.job-filter-bar__confirm-group {
				position: sticky;
				bottom: 0;
				padding-top: 2rem;
				background-color: $color-primary--black;

				.button--clear {
					background-color: $color-primary--gray;
					color: $color-primary--white;
				}
			}
		}
	}

	.is-open .job-filter-wrapper {
		@include bp-xs {
			transform: translateX(0);
		}

		.job-filter-bar__mobile-header {
			padding: 0;
		}
	}
}

// When the fullscreen filter menu is open we want to prevent scrolling in the background
.freeze-scroll {
	height: 100vh;
	overflow: hidden;
}

.toggle-button--jobs {
	transition: transform 0.25s ease-out;

	@include bp-xs {
		display: none;
	}

	.is-open & {
		transform: rotate(180deg);
		transition: transform 0.25s ease-out;
	}

	&:hover {
		cursor: pointer;
	}
}

//openings title
.openings {
	@include spacing-900(margin-bottom);

	height: 80rem;
	background-repeat: no-repeat;
	background-size: contain;
	background-image: url("assets/svg/openings.svg");
	background-position-y: center;

	@include bp-xs {
		height: 17rem;
	}

	@include bp-s {
		height: 25rem;
	}

	@include bp-m {
		height: 40rem;
	}

	@include bp-l {
		height: 51rem;
	}

	.is-dark & {
		filter: invert(1);
	}
}

@include bp-xs {
	.offering--info {
		overflow-x: hidden;
		margin-right: 0;
	}
}
